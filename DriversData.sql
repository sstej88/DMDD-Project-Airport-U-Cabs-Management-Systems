CREATE TABLE DRIVER_DETAILS 
(
    DRIVER_ID NUMBER(4) GENERATED ALWAYS as IDENTITY(START WITH 2222 INCREMENT BY 1),
    DRIVER_NAME VARCHAR2(60) NOT NULL,
    DRIVER_RATING FLOAT DEFAULT 9.9 NOT NULL,
    CONSTRAINT PK_DRIVER_DETAILS PRIMARY KEY (DRIVER_ID)
);

CREATE OR REPLACE PROCEDURE ADD_DRIVER 
(
    INPUT_DRIVER_NAME IN VARCHAR2
)
AS
BEGIN
    INSERT INTO DRIVER_DETAILS (DRIVER_NAME) VALUES (INPUT_DRIVER_NAME);
    DBMS_OUTPUT.PUT_LINE('DRIVER WITH NAME '||INPUT_DRIVER_NAME||' IS INSERTED');
END;

CREATE FUNCTION GET_DRIVER_EXISTENCE (INPUT_DRIVER_ID NUMBER) RETURN VARCHAR2
AS
    OUTPUT_IS_DRIVER_EXISTING NUMBER;
BEGIN
    SELECT COUNT(*) INTO OUTPUT_IS_DRIVER_EXISTING
    FROM DRIVER_DETAILS
    WHERE DRIVER_ID = INPUT_DRIVER_ID;
    RETURN OUTPUT_IS_DRIVER_EXISTING;
END;

CREATE FUNCTION GET_DRIVER_NAME (INPUT_DRIVER_ID NUMBER) RETURN VARCHAR2
AS
    OUTPUT_NAME VARCHAR2(60);
BEGIN
    SELECT DRIVER_NAME INTO OUTPUT_NAME
    FROM DRIVER_DETAILS
    WHERE DRIVER_ID = INPUT_DRIVER_ID;
    RETURN OUTPUT_NAME;
END;

CREATE FUNCTION GET_DRIVER_RATING (INPUT_DRIVER_ID NUMBER) RETURN FLOAT
AS
    OUTPUT_RATING FLOAT;
BEGIN
    SELECT DRIVER_RATING INTO OUTPUT_RATING
    FROM DRIVER_DETAILS
    WHERE DRIVER_ID = INPUT_DRIVER_ID;
    RETURN OUTPUT_RATING;
END;

COMMIT;