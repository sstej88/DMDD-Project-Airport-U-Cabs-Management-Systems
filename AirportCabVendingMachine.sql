/*
    Problem Statement: Create a table named Airport Taxi Booking Machine. This is the table which will be shown to the user in the airport
    Outline: This table has columns taxi booking status which is by default 0. When a user makes a payment and payment is successful, then taxi booking status will be changed to 1 and slip will be printed.
*/
CREATE TABLE AIRPORT_TAXI_BOOKING_MACHINE 
(
    PASSENGER_ID NUMBER(12) UNIQUE NOT NULL,
    PASSENGER_NAME VARCHAR2(60) NOT NULL,
    DESTINATION_ADDRESS VARCHAR2(60) DEFAULT '',
    TAXI_BOOKING_STATUS NUMBER(1) DEFAULT 0,
    CAB_NUMBER VARCHAR2(8) NOT NULL,
    DRIVER_ID NUMBER(4) NOT NULL,
    DRIVER_NAME VARCHAR2(60) NOT NULL,
    CAB_SERVICE_NAME VARCHAR2(12) NOT NULL,
    DRIVER_RATING FLOAT NOT NULL,
    PAYMENT_ID NUMBER(16) DEFAULT NULL,
    CARD_NUMBER NUMBER(16) DEFAULT NULL
);

ALTER TABLE AIRPORT_TAXI_BOOKING_MACHINE ADD FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGERS_DATA (PASSENGER_ID);

/* Function to get passenger name by taking passenger ID */
CREATE OR REPLACE FUNCTION GET_PASSENGER_NAME_FROM_PASSENGER_ID (INPUT_PASSENGER_ID NUMBER) RETURN VARCHAR2
AS
    OUTPUT_PASSENGER_NAME VARCHAR2(60);
BEGIN
    SELECT PASSENGER_NAME INTO OUTPUT_PASSENGER_NAME FROM PASSENGERS_DATA WHERE PASSENGER_ID = INPUT_PASSENGER_ID;
    RETURN OUTPUT_PASSENGER_NAME;
END;

/* Function to get passenger destination address by taking passenger ID */
CREATE OR REPLACE FUNCTION GET_PASSENGER_DESTINATION_ADDRESS (INPUT_PASSENGER_ID NUMBER) RETURN VARCHAR2
AS
    OUTPUT_DESTINATION_ADDRESS VARCHAR2(60);
BEGIN
    SELECT DESTINATION_ADDRESS INTO OUTPUT_DESTINATION_ADDRESS FROM PASSENGERS_DATA WHERE PASSENGER_ID = INPUT_PASSENGER_ID;
    RETURN OUTPUT_DESTINATION_ADDRESS;
END;

/* Procedure to get all the cab details from the Cab Details */
CREATE OR REPLACE PROCEDURE GET_CAB_DETAILS (
    INPUT_DRIVER_ID IN NUMBER,
    OUTPUT_CAB_NUMBER OUT VARCHAR2,
    OUTPUT_DRIVER_NAME OUT VARCHAR2,
    OUTPUT_CAB_SERVICE_NAME OUT VARCHAR2,
    OUTPUT_DRIVER_RATING OUT FLOAT
)
AS
BEGIN
    SELECT CAB_NUMBER INTO OUTPUT_CAB_NUMBER FROM CAB_DETAILS WHERE DRIVER_ID=INPUT_DRIVER_ID;
    SELECT DRIVER_NAME INTO OUTPUT_DRIVER_NAME FROM CAB_DETAILS WHERE DRIVER_ID=INPUT_DRIVER_ID;
    SELECT CAB_SERVICE_NAME INTO OUTPUT_CAB_SERVICE_NAME FROM CAB_DETAILS WHERE DRIVER_ID=INPUT_DRIVER_ID;
    SELECT DRIVER_RATING INTO OUTPUT_DRIVER_RATING FROM CAB_DETAILS WHERE DRIVER_ID=INPUT_DRIVER_ID;
END;

/* Trigger to insert data into the taxi booking machine. This data will be shown to the newly landed passengers */
CREATE OR REPLACE TRIGGER INSERT_AND_DISPLAY_PASSENGER_DATA_ON_AIRPORT_TAXI_BOOKING_MACHINE
    AFTER INSERT OR UPDATE ON UBER_SERVICES
DECLARE
    INPUT_BOOKING_ID NUMBER;
    INPUT_PASSENGER_ID NUMBER;
    INTPUT_DRIVER_ID NUMBER;
    OUTPUT_PASSENGER_NAME VARCHAR2(60);
    OUTPUT_DESTINATION_ADDRESS VARCHAR2(60);
    OUTPUT_CAB_NUMBER VARCHAR2(8);
    OUTPUT_DRIVER_NAME VARCHAR2(60);
    OUTPUT_CAB_SERVICE_NAME VARCHAR2(12);
    OUTPUT_DRIVER_RATING FLOAT;
BEGIN
    SELECT MAX(BOOKING_ID) INTO INPUT_BOOKING_ID FROM UBER_SERVICES;
    SELECT PASSENGER_ID INTO INPUT_PASSENGER_ID FROM UBER_SERVICES WHERE BOOKING_ID=INPUT_BOOKING_ID;
    SELECT DRIVER_ID INTO INTPUT_DRIVER_ID FROM UBER_SERVICES WHERE BOOKING_ID=INPUT_BOOKING_ID;
    OUTPUT_PASSENGER_NAME := GET_PASSENGER_NAME_FROM_PASSENGER_ID(INPUT_PASSENGER_ID);
    OUTPUT_DESTINATION_ADDRESS := GET_PASSENGER_DESTINATION_ADDRESS(INPUT_PASSENGER_ID);
    GET_CAB_DETAILS(INTPUT_DRIVER_ID, OUTPUT_CAB_NUMBER, OUTPUT_DRIVER_NAME, OUTPUT_CAB_SERVICE_NAME, OUTPUT_DRIVER_RATING);
    INSERT INTO AIRPORT_TAXI_BOOKING_MACHINE (PASSENGER_ID, PASSENGER_NAME, DESTINATION_ADDRESS, CAB_NUMBER, DRIVER_ID, DRIVER_NAME, CAB_SERVICE_NAME, DRIVER_RATING)
    VALUES (INPUT_PASSENGER_ID, OUTPUT_PASSENGER_NAME, OUTPUT_DESTINATION_ADDRESS, OUTPUT_CAB_NUMBER, INTPUT_DRIVER_ID, OUTPUT_DRIVER_NAME, OUTPUT_CAB_SERVICE_NAME, OUTPUT_DRIVER_RATING);
    DBMS_OUTPUT.PUT_LINE('PASSENGER HAS A CAB READY TO VIEW IN THE AIRPORT TAXI BOOKING MACHINE');
END;

COMMIT;